# .github/workflows/angular-app.yml
name: CI/CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  prepare-frontend:
    runs-on: ubuntu-latest
    outputs:
      deps-artifact: frontend-deps
      dist-artifact: frontend-dist
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Node.js (Frontend)
        uses: actions/setup-node@v3
        with:
          node-version: 24
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies (Frontend)
        run: npm ci
        working-directory: frontend

      - name: Build (Frontend)
        run: npm run build
        working-directory: frontend

      - name: Upload deps artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-deps
          path: frontend/node_modules

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist/
  test:
    runs-on: ubuntu-latest
    needs: prepare-frontend
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Node.js (Frontend)
        uses: actions/setup-node@v3
        with:
          node-version: 24
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Download deps
        uses: actions/download-artifact@v4
        with:
          name: frontend-deps
          path: frontend/node_modules

      - name: Run tests (Frontend)
        run: npm test
        working-directory: frontend

  lint:
    runs-on: ubuntu-latest
    needs: prepare-frontend
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Node.js (Frontend)
        uses: actions/setup-node@v3
        with:
          node-version: 24
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Download deps
        uses: actions/download-artifact@v4
        with:
          name: frontend-deps
          path: frontend/node_modules

      - name: Run ESLint (Frontend)
        run: npm run lint
        working-directory: frontend

  infra-deploy:
    runs-on: ubuntu-latest
    needs: [prepare-frontend, test, lint]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist

      - name: Setup Node.js (Infra)
        uses: actions/setup-node@v3
        with:
          node-version: 24
          cache: "npm"
          cache-dependency-path: infra/package-lock.json

      - name: Cache CDK synth artifacts
        uses: actions/cache@v4
        with:
          path: infra/cdk.out
          key: infra-cdk-out-${{ runner.os }}-${{ hashFiles('infra/**/*.ts','infra/cdk.json') }}
          restore-keys: |
            infra-cdk-out-${{ runner.os }}-

      - name: Install CDK dependencies
        run: npm ci
        working-directory: infra

      # - name: CDK Bootstrap
      #   run: npx cdk bootstrap --require-approval=never
      #   working-directory: infra

      # - name: CDK Deploy
      #   run: npx cdk deploy --require-approval=never
      #   working-directory: infra
